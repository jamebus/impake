#!/bin/sh

set -eu

me="${0##*/}"
default_expiry='1w'
storage_url='https://file.io'
expires_parameter='expires'
upload_failure_throttle='30'

usage() {
	local rc
	rc=${1:-0}
	echo "Usage: $me [options] file_or_directory ..."
	echo
	echo '       -c, --compress Compression method:'
	echo '                      single file: bzip2, gzip, lzma, xz'
	echo '                      zip:         bzip2, copy, deflate, deflate64, lzma, ppmd'
	echo '                      7z:          bzip2, copy, deflate, lzma, lzma2, ppmd'
	echo '                      tar:         bzip2, gzip, xz'
	echo '       -e, --encrypt  Enable encryption, zip and 7z only'
	echo "       -h, --help     You're looking at it :)"
	echo '       -s, --size     Create multi-volume archive of this size,'
	echo '                      zip and 7z only'
	echo '       -t, --type     Archive type:'
	echo '                      none (single file), zip, 7z, tar'
	echo
	echo "Sensible defaults will be chosen if an option isn't specified"
	exit $rc
}

suggest_help() {
	echo "Try '$me --help' for more information"
	exit 1
}

fail() {
	echo "ERROR: $1"
	exit 1
}

test $# -lt 1 && usage 1

while [ $# -ne 0 ]; do
	opt=''
	arg=''
	case $1 in
		--*=*)
			opt=$(echo "$1" | awk -F= '{print $1}')
			arg=$(echo "$1" | awk -F= '{print $2}')
			shift
			;;
		-*)
			opt=$1
			shift
			case ${1:-} in
				-*)
					:;;
				*)
					# -e doesn't want an argument
					if [ ! "$opt" = '-e' ]; then
						arg="${1:-}"
						test $# -gt 0 && shift
					fi
					;;
			esac
	esac

	case $opt in
		-c|--compress)
			opt_compress="1"
			opt_compress_arg="$arg"
			;;
		-e|--encrypt)
			opt_encrypt="1"
			;;
		-h|--help)
			usage
			;;
		-s|--size)
			opt_size="1"
			opt_size_arg="$arg"
			;;
		-t|--type)
			opt_type="1"
			opt_type_arg="$arg"
			;;
		-*|--*)
			echo "Unknown option: $opt"
			exit 1
			;;
		*)
			break
			;;
	esac
done

test $# -gt 1 && have_things=1
for thing in "$@"; do
	test -e "$thing" || missing="${missing:-}\"${thing}\" "
	test -z "${have_things:-}" && test -d "$thing" && have_things=1
done
if [ -n "${missing:-}" ]; then
	echo "Does not exist: ${missing% }. Aborting." 1>&2
	exit 1
fi

if [ -n "${opt_type:-}" ]; then
	case "$opt_type_arg" in
		none|zip|7z|tar) :;;
		*)
			echo "Invalid argument to type: $opt_type_arg"
			exit 1
			;;
	esac
fi

if [ -n "${opt_compress:-}" ]; then
	case "$opt_compress_arg" in
		bzip2|copy|deflate|deflate64|gzip|lzma|lzma2|ppmd|xz) :;;
		*)
			echo "Invalid argument to compress: $opt_compress_arg"
			exit 1
			;;
esac
fi

if [ -z "${opt_type:-}" -a \
     \( -n "${opt_encrypt:-}" -o -n "${opt_size:-}" \) ]; then
	opt_type='1'
	opt_type_arg='7z'
	echo 'Notice: Using 7z(1) to build the archive'
fi

if [ -z "${opt_type:-}" -a -n "${have_things:-}" ]; then
	opt_type='1'
	opt_type_arg='tar'
	echo 'Notice: Using tar(1) to build the archive'
fi

for tool in 7z jq curl; do
	which "$tool" >/dev/null 2>&1 || missing="${missing:-}${tool} "
done
if [ -n "${missing:-}" ]; then
	echo "Missing: ${missing% }. Aborting." 1>&2
	exit 1
fi

if [ -n "${opt_type:-}" ]; then
	if [ -z "${opt_type_arg:-}" -o "${opt_type_arg:-}" = 'none' ]; then
		archive_command=''
		archive_arguments=''
		archive_filename_extension=''
	elif [ "$opt_type_arg" = '7z' ]; then
		archive_command='7z'
		archive_arguments='a'
		archive_filename_extension='.7z'
	elif [ "$opt_type_arg" = 'zip' ]; then
		archive_command='7z'
		archive_arguments='a -tzip'
		archive_filename_extension='.zip'
	elif [ "$opt_type_arg" = 'tar' ]; then
		archive_command='tar'
		archive_arguments='cvf'
		archive_filename_extension='.tar'
	fi

if [ $# -eq 0 ]; then
	echo 'Cowardly refusing to send nothing'
	suggest_help
fi

# BSD
if mktemp -d -u -t "$me" >/dev/null 2>&1; then
	tmpdir=$(mktemp -d -t "$me")
# GNU coreutils
elif mktemp -d -u -p "${TMPDIR:-/tmp}" "${me}.XXXXXXXXXX" >/dev/null 2>&1; then
	tmpdir=$(mktemp -d -p "${TMPDIR:-/tmp}" "${me}.XXXXXXXXXX")
else
	echo 'Unable to figure out how to make a temporary directory. Aborting.' 1>&2
	exit 1
fi
trap 'rm -rf "$tmpdir"' EXIT

archive_basename=$(uuidgen | tr 'A-Z' 'a-z')
7z a -m0=lzma2 -p -mhe=on -v2g "${tmpdir}/$archive_basename" "$@"

cd "$tmpdir"
echo

if [ ! -f "${archive_basename}.7z.002" ]; then
	mv "${archive_basename}.7z.001" "${archive_basename}.7z"
	files="${archive_basename}.7z"
else
	files="${archive_basename}.7z.*"
fi

for f in $files; do
	for t in 1 2 3 4 5 6; do
		response=$(curl -F "file=@${f}" "${storage_url}/?${expires_parameter}=${default_expiry}")
		test "$(echo "$response" | jq -r '.success'  2>/dev/null)" = 'true' && break
		test $t -eq 6 || echo "Upload failed, retrying: ${t}/5" 1>&2
		sleep "$upload_failure_throttle"
	done
	if [ $? -gt 0 ]; then
		echo 'Aborting after 5 attempts.' 1>&2
		exit 1
	fi
	urls="${urls:-}$(echo "$response" | jq -r '.link') "
	expiry=$(echo "$response" | jq -r '.expiry')
done

echo
for url in $urls; do
	echo "URL:    $url"
done
echo "Expiry: $expiry"
